{"version":3,"sources":["scripts.js"],"names":["ftfHelpers","ready","fn","document","readyState","addEventListener","fetchData","data","cb","done","fetch","window","ftf_aet","ajax_url","method","credentials","headers","Content-Type","Cache-Control","body","URLSearchParams","then","response","json","error","console","eventName","event","Event","dispatchEvent","processAttachmentURL","getTweetId","url","match","replace","tweets","querySelectorAll","_iterator","_createForOfIteratorHelper","s","_step","n","tweet","value","anchors","length","href","tweetIds","push","tweetId","err","e","f","config","use_api","action","tweet_ids","join","forEach","renderTweet","tweetsWithAttachment","tweetsWithAttachmentCount","_step2","_iterator2","dataset","urlAttachmentProcessed","urlAttachment","indexOf","log","urlAttachmentPreview","tmpAnchor","image","createElement","className","urlAttachmentPreviewHTML","concat","title","description","hostname","querySelector","appendChild","_loop","_iterator3","_step3","tweetAttribution","tweetDate","childNodes","innerHTML","textContent","i","currentNode","nodeName","nodeValue","tweetDateEl","usernames","name","username","names","split","created_at","id","tweetText","text","tweetUrl","users","verifiedBadge","verified","renderedTweetHTML","profile_image_url","entities","urls","display_url","RegExp","expanded_url","mentions","mention","container","hashtags","hashtag","tag","media","index","type","preview_image_url","width","height","polls","poll","voteCounts","voteCountMax","votesTotal","options","map","option","votes","Math","max","apply","_toConsumableArray","reduce","total","num","votesPortion","label","round","toLocaleString","Date","toLocaleDateString","navigator","language","month","year","day","show_metrics","public_metrics","retweet_count","like_count","renderedTweet","lastUrl","extended_entities","tweetContainer","parentNode","replaceChild","processTweets"],"mappings":"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","file":"scripts.min.js","sourcesContent":["'use strict';\nconst ftfHelpers = {\n    ready: function( fn ) {\n        if ( document.readyState != 'loading' ){\n            fn();\n        } else {\n            document.addEventListener( 'DOMContentLoaded', fn );\n        }\n    },\n    fetchData( data, cb, done ){\n        done = done || function(){ /* noop */ }\n\n        fetch( window.ftf_aet.ajax_url, {\n            method: 'POST',\n            credentials: 'same-origin',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Cache-Control': 'no-cache',\n            },\n            body: new URLSearchParams( data ) } )\n            .then(function( response ){ return response.json() } )\n            .then( function( response ){\n                // console.log( 'response', response );\n                cb( response );\n\n            } )\n            .catch( function( error ){\n                console.error( 'tembeds_error', error );\n            } )\n            .then( done );\n    },\n    dispatchEvent( eventName ){\n        const event = new Event( eventName );\n        document.dispatchEvent( event );\n    },\n    processAttachmentURL: function( cb ){\n\n    },\n    getTweetId: function( url ){\n        return url.match(/status\\/(\\d+)/g)[0].replace( 'status/', '' );\n    },\n    processTweets: function(){\n        const tweets = document.querySelectorAll( 'blockquote.twitter-tweet' );\n        let tweetIds = [];\n\n        for ( const tweet of tweets ) {\n            const anchors = tweet.querySelectorAll( 'a' );\n            const url = anchors[anchors.length - 1].href;\n            const tweetId = ftfHelpers.getTweetId( url );\n            tweetIds.push( tweetId );\n            tweet.dataset.tweetId = tweetId;\n        }\n\n        // console.log( 'tweet IDs', tweetIds );\n\n        if ( tweetIds.length ){\n            if ( ftf_aet.config.use_api ){\n                ftfHelpers.fetchData( {\n                        action: 'ftf_embed_tweet',\n                        tweet_ids: tweetIds.join( ',' )\n                    }, function( response ){\n                   if ( response && response.length ){\n                        response.forEach( function( data ){\n                            ftfHelpers.renderTweet( data );\n                        } );\n\n                        const tweetsWithAttachment = document.querySelectorAll( '[data-url-attachment-processed=\"false\"]' );\n                        let tweetsWithAttachmentCount = tweetsWithAttachment.length;\n\n                        if ( tweetsWithAttachmentCount === 0 ){\n                            ftfHelpers.dispatchEvent( 'tembeds_tweets_processed' );\n                        }\n\n                        // console.log( 'tweetsWithAttachment', tweetsWithAttachment );\n\n                        for ( const tweet of tweetsWithAttachment ) {\n                            tweet.dataset.urlAttachmentProcessed = 'true';\n\n                            if ( tweet.dataset.urlAttachment.indexOf( 'twitter.com/' ) > -1 ){\n                                console.log( 'rendering QT...', ftfHelpers.getTweetId( tweet.dataset.urlAttachment ) );\n                                ftfHelpers.fetchData( {\n                                        action: 'ftf_embed_tweet',\n                                        tweet_ids: [ftfHelpers.getTweetId( tweet.dataset.urlAttachment )]\n                                    }, function( response ){\n                                        console.log( response );\n                                   if ( response && response.length ){\n                                        response.forEach( function( data ){\n                                            ftfHelpers.renderTweet( data, tweet );\n                                        } );\n                                    }\n                                } );\n                            } else {\n\n                            }\n\n                            ftfHelpers.fetchData( {\n                                    action: 'ftf_get_site_info',\n                                    url: tweet.dataset.urlAttachment\n                                }, function( data ){\n                                if ( data && data.image ){\n                                    let urlAttachmentPreview = document.createElement( 'div' );\n                                    urlAttachmentPreview.className = `tweet-attachment-preview card mt-4`;\n\n                                    let tmpAnchor = document.createElement ( 'a' );\n                                    tmpAnchor.href = tweet.dataset.urlAttachment;\n\n                                    let urlAttachmentPreviewHTML = '';\n\n                                    if ( data.image ){\n                                        urlAttachmentPreviewHTML += `<img loading=\"lazy\" class=\"tweet-attachment-site-thumbnail card-img-top\" src=\"${ data.image }\" alt=\"\">`;\n                                    }\n\n                                    urlAttachmentPreviewHTML += `<div class=\"card-body\">`;\n\n                                    if ( data.title ){\n                                        urlAttachmentPreviewHTML += `<h5 class=\"card-title\">${ data.title }</h5>`;\n                                    }\n\n                                    if ( data.description ){\n                                        urlAttachmentPreviewHTML += `<h6 class=\"card-subtitle mb-2 text-muted\">${ data.description }</h6>`;\n                                    }\n\n                                    urlAttachmentPreviewHTML += `<p class=\"card-text\">🔗 <a class=\"stretched-link text-muted\" href=\"${ tweet.dataset.urlAttachment }\" target=\"_blank\">${ tmpAnchor.hostname }</a></p></div>`;\n\n                                    urlAttachmentPreview.innerHTML = urlAttachmentPreviewHTML;\n                                    tweet.querySelector( '.tweet-body-wrapper' ).appendChild( urlAttachmentPreview );\n                                }\n\n                            }, function(){\n                                tweetsWithAttachmentCount--;\n                                // console.log( 'tweetsWithAttachmentCount', tweetsWithAttachmentCount );\n                                if ( tweetsWithAttachmentCount === 0 ){\n                                    ftfHelpers.dispatchEvent( 'tembeds_tweets_processed' );\n                                }\n                            } );                           \n                        }\n                    }\n                    \n                } );\n            } else {\n\n                for ( const tweet of tweets ) {\n                    // console.log( 'debug:tweet', tweet );\n                    // console.log( 'debug:childNodes', tweet.childNodes );\n\n                    let tweetAttribution = '', tweetDate = '';\n\n                    if ( tweet.childNodes && tweet.childNodes.length ){\n                        if ( tweet.childNodes.length === 3 ){\n                            tweetDate = tweet.childNodes[2].textContent;\n                            for ( let i = 0; i < tweet.childNodes.length; i++ ){\n                                let currentNode = tweet.childNodes[i];\n                                if ( currentNode.nodeName === '#text' ) {\n                                    tweetAttribution = currentNode.nodeValue;\n                                    break;\n                                }\n                            }                        \n                        } else {\n                            tweetAttribution = tweet.childNodes[tweet.childNodes.length - 2].innerHTML;\n                            let tweetDateEl = document.createElement( 'div' );\n                            tweetDateEl.innerHTML = tweetAttribution;\n                            tweetDate = tweetDateEl.querySelector( 'a' ).textContent;\n                        }\n\n                        const usernames = tweetAttribution.match( /@\\w+/gi );\n                        let name = '', username = '';\n                        // console.log( 'debug:tweetDate', tweetDate );\n\n                        if ( usernames && usernames[0] ){\n                            username = usernames[0];\n                            const names = tweetAttribution.split( username );\n                            // console.log( 'debug:names', usernames );\n\n                            if ( names && names[0] ){\n                                name = names[0].replace( '— ', '' ).replace( ' (', '' );\n                            }\n                        }\n\n                        ftfHelpers.renderTweet( {\n                          'created_at': tweetDate,\n                          'text': tweet.querySelector( 'p' ).innerHTML,\n                          'id': tweet.dataset.tweetId,\n                          // 'author_id': '',\n                          'users': [\n                            {\n                              'name': name,\n                              'username': username.replace(/^@/, ''),\n                              // 'id': '',\n                              // 'profile_image_url': '',\n                              // 'verified': false\n                            }\n                          ]\n                        } );                    \n                    }\n                }\n            }\n        }\n    },\n    renderTweet: function( data, container ){\n        // console.log( 'debug:', data );\n        let tweetText = data.text,\n            tweetUrl = `https://twitter.com/${ data.users[0].username }/status/${ data.id }`,\n            entities = null,\n            verifiedBadge = data.users[0].verified ? '<svg class=\"tweet-verified-user-badge\" viewBox=\"0 0 24 24\" aria-label=\"Verified account\" class=\"r-13gxpu9 r-4qtqp9 r-yyyyoo r-1xvli5t r-9cviqr r-dnmrzs r-bnwqim r-1plcrui r-lrvibr\"><g><path d=\"M22.5 12.5c0-1.58-.875-2.95-2.148-3.6.154-.435.238-.905.238-1.4 0-2.21-1.71-3.998-3.818-3.998-.47 0-.92.084-1.336.25C14.818 2.415 13.51 1.5 12 1.5s-2.816.917-3.437 2.25c-.415-.165-.866-.25-1.336-.25-2.11 0-3.818 1.79-3.818 4 0 .494.083.964.237 1.4-1.272.65-2.147 2.018-2.147 3.6 0 1.495.782 2.798 1.942 3.486-.02.17-.032.34-.032.514 0 2.21 1.708 4 3.818 4 .47 0 .92-.086 1.335-.25.62 1.334 1.926 2.25 3.437 2.25 1.512 0 2.818-.916 3.437-2.25.415.163.865.248 1.336.248 2.11 0 3.818-1.79 3.818-4 0-.174-.012-.344-.033-.513 1.158-.687 1.943-1.99 1.943-3.484zm-6.616-3.334l-4.334 6.5c-.145.217-.382.334-.625.334-.143 0-.288-.04-.416-.126l-.115-.094-2.415-2.415c-.293-.293-.293-.768 0-1.06s.768-.294 1.06 0l1.77 1.767 3.825-5.74c.23-.345.696-.436 1.04-.207.346.23.44.696.21 1.04z\"></path></g></svg>' : '',\n            renderedTweetHTML = `<div class=\"card w-100\">\n                <div class=\"tweet-body-wrapper card-body pt-4\">\n                    <div class=\"card-text\">\n                        <div class=\"row no-gutters mb-1\">`;\n\n            if ( data.users[0].profile_image_url ){\n                renderedTweetHTML += `<div class=\"col-2 col-sm-1 col-md-1\">\n                    <a href=\"https://twitter.com/${ data.users[0].username }\" class=\"text-decoration-none\"><img loading=\"lazy\" class=\"rounded-circle border\" width=\"48\" height=\"48\" src=\"${ data.users[0].profile_image_url }\"></a>\n                </div>`;\n            }\n\n            renderedTweetHTML += `<div class=\"tweet-author ${ data.users[0].profile_image_url ? 'col-9 col-sm-10 col-md-10 pl-2' : 'col-11 col-sm-11 col-md-11' } pb-3\">\n                <p class=\"font-weight-bold mb-0 mt-0\"><a class=\"text-dark text-decoration-none\" href=\"https://twitter.com/${ data.users[0].username }\">${ data.users[0].name }${ verifiedBadge }</a></p>\n                <p class=\"mb-1 mb-md-2 mt-0\"><a class=\"text-muted text-decoration-none\" href=\"https://twitter.com/${ data.users[0].username }\">@${ data.users[0].username }</a></p>\n            </div>\n            <div class=\"col-1 text-right\">\n                <a href=\"${ tweetUrl }\" target=\"_blank\"><svg style=\"width: 24px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M512 97.248c-19.04 8.352-39.328 13.888-60.48 16.576 21.76-12.992 38.368-33.408 46.176-58.016-20.288 12.096-42.688 20.64-66.56 25.408C411.872 60.704 384.416 48 354.464 48c-58.112 0-104.896 47.168-104.896 104.992 0 8.32.704 16.32 2.432 23.936-87.264-4.256-164.48-46.08-216.352-109.792-9.056 15.712-14.368 33.696-14.368 53.056 0 36.352 18.72 68.576 46.624 87.232-16.864-.32-33.408-5.216-47.424-12.928v1.152c0 51.008 36.384 93.376 84.096 103.136-8.544 2.336-17.856 3.456-27.52 3.456-6.72 0-13.504-.384-19.872-1.792 13.6 41.568 52.192 72.128 98.08 73.12-35.712 27.936-81.056 44.768-130.144 44.768-8.608 0-16.864-.384-25.12-1.44C46.496 446.88 101.6 464 161.024 464c193.152 0 298.752-160 298.752-298.688 0-4.64-.16-9.12-.384-13.568 20.832-14.784 38.336-33.248 52.608-54.496z\" fill=\"#03a9f4\"/></svg></a>\n            </div>\n        </div>\n        <div class=\"tweet-body\">`;\n\n        if ( data.entities ){\n            if ( data.entities.urls ){\n                data.entities.urls.forEach( function( url ){\n                    if ( url.display_url.indexOf( 'pic.twitter.com' ) === -1 ){\n                        tweetText = tweetText.replace( RegExp( url.url, 'ig' ), `<a href=\"${ url.expanded_url }\" target=\"_blank\">${ url.display_url }</a>` )\n                    } else {\n                        tweetText = tweetText.replace( url.url, '' );\n                    }\n                } );\n            }\n\n            if ( data.entities.mentions ){\n                data.entities.mentions.forEach( function( mention ){\n                    tweetText = tweetText.replace( RegExp( `@${ mention.username }`, 'ig' ), `<a href=\"https://twitter.com/${ mention.username }\" target=\"_blank\">@${ mention.username }</a>` );\n                } );\n            }\n\n            if ( data.entities.hashtags ){\n                data.entities.hashtags.forEach( function( hashtag ){\n                    tweetText = tweetText.replace( RegExp( `#${ hashtag.tag }`, 'ig' ), `<a href=\"https://twitter.com/hashtag/${ hashtag.tag }\" target=\"_blank\">#${ hashtag.tag }</a>` );\n                } );\n            }\n        }\n\n        if ( data.media && data.media.length ){\n            tweetText += `<div data-media-length=\"${ data.media.length }\" class=\"tweet-media row mt-3 no-gutters\">`;\n\n            data.media.forEach( function( media, index ){\n                if ( data.media.length === 1 ){\n                    tweetText += `<div data-media-type=\"${ media.type }\" class=\"text-center col-sm-12 col-md-12 col-lg-12\">`;\n                } else if ( data.media.length === 3 ){\n                    if ( index === 2 ){\n                        tweetText += `<div data-media-type=\"${ media.type }\" class=\"text-center col-sm-12 col-md-12 col-lg-12\">`;\n                    } else {\n                        tweetText += `<div data-media-type=\"${ media.type }\" class=\"text-center col-sm-12 col-md-6 col-lg-6\">`;\n                    }\n                } else if ( data.media.length > 1 && data.media.length < 5 ){\n                    tweetText += `<div data-media-type=\"${ media.type }\" class=\"text-center col-sm-12 col-md-6 col-lg-6\">`;\n                } else {\n                    tweetText += `<div data-media-type=\"${ media.type }\" class=\"text-center col-sm-12 col-md-3 col-lg-3\">`;\n                }\n\n                if ( media.type === 'animated_gif' ){\n                    tweetText += `<video class=\"w-100 mt-0\" controls loop><source src=\"${ media.preview_image_url.replace( 'pbs.twimg.com/tweet_video_thumb', 'video.twimg.com/tweet_video' ).replace( '.jpg', '.mp4').replace( '.png', '.mp4') }\" type=\"video/mp4\"></video>`\n                } else if ( media.type === 'video' ){\n                    /* TODO: Video URLs not being passed in Twitter API v2.\n                       https://twittercommunity.com/t/how-do-i-get-the-video-url-in-recent-search/141896\n                    */\n                    tweetText += `<a class=\"tweet-video-placeholder\" href=\"${ tweetUrl }\" target=\"_blank\"><img loading=\"lazy\" width=\"${ media.width }\" height=\"${ media.height }\" class=\"w-100 rounded border\" src=\"${ media.preview_image_url }\"></a>`;\n\n                } else if ( media.type === 'photo' ){\n                    tweetText += `<a href=\"${ tweetUrl }\" target=\"_blank\"><img loading=\"lazy\" width=\"${ media.width }\" height=\"${ media.height }\" class=\"w-100 rounded border\" src=\"${ media.url }\"></a>`;\n                }\n\n                tweetText += '</div>';\n            } );\n\n            tweetText += '</div>';\n        }\n\n\n        if ( data.polls && data.polls.length ){\n            tweetText += '<div class=\"mt-0 row\">';\n\n            data.polls.forEach( function( poll ){\n                if ( poll.options && poll.options.length ){\n\n                    const voteCounts = poll.options.map( function( option ){\n                        return option.votes;\n                    } );\n\n                    const voteCountMax = Math.max( ...voteCounts );\n                    const votesTotal = voteCounts.reduce( function( total, num ){\n                        return total + num;\n                    } );\n\n                    poll.options.forEach( function( option ){\n                        const votesPortion = option.votes/votesTotal * 100;\n                        tweetText += `\n                        <div class=\"tweet-poll-results col-9\" style=\"height:60px;\">\n                            <div class=\"progress position-relative mt-n4 ${ option.votes === voteCountMax ? ' border border-primary ' : '' }\" style=\"height:30px;\">\n                                <div class=\"progress-bar\" \n                                     role=\"progressbar\" \n                                     style=\"width: ${ votesPortion }%\" \n                                     aria-valuenow=\"${ votesPortion }\" \n                                     aria-valuemin=\"0\" \n                                     aria-valuemax=\"100\"></div>\n                                <span class=\"pl-2 d-flex position-absolute w-100\" style=\"font-size: 1rem; line-height: 30px;\">${ option.label }</span>\n                            </div>\n                        </div>\n                        <div class=\"col-3 mt-n4 text-right\" style=\"height:60px;\">\n                            <span class=\"w-100\">${ Math.round( option.votes/votesTotal * 100 ) }%</span>\n                        </div>`;\n                    } );\n                    tweetText += `<div class=\"col-12 mt-3\"><p class=\"text-muted\">${ votesTotal.toLocaleString() } votes</p></div>`;\n                }\n            } );\n\n            tweetText += '</div>';\n        }                    \n\n        const tweetDate = new Date( data.created_at ).toLocaleDateString( navigator.language, { month: 'long', year: 'numeric', day: 'numeric' } );\n\n        renderedTweetHTML += tweetText + `</div>\n                </div>\n            </div>\n            <div class=\"card-footer\">`;\n\n        if ( !container ){\n            if ( ftf_aet.config.show_metrics && data.public_metrics ){\n                renderedTweetHTML += `\n                    <span class=\"tweet-icon\">🔁</span><a class=\"text-muted\" href=\"${ tweetUrl }\" target=\"_blank\">${ data.public_metrics.retweet_count.toLocaleString() }</a> |\n                    <span class=\"tweet-icon\">❤️</span> <a class=\"text-muted\" href=\"${ tweetUrl }\" target=\"_blank\">${ data.public_metrics.like_count.toLocaleString() }</a> | `;\n            }\n                        \n            renderedTweetHTML += `<a class=\"text-muted\" href=\"${ tweetUrl }\" target=\"_blank\">${ tweetDate }</a>`;\n        }\n\n        renderedTweetHTML += '</div></div>';\n        \n        let renderedTweet = document.createElement( 'div' );\n        renderedTweet.className = `twitter-tweet twitter-tweet-rendered w-100`;\n        renderedTweet.innerHTML = renderedTweetHTML;\n\n        let lastUrl = '';\n\n        if ( data.entities && data.entities.urls && data.entities.urls.length ){\n            lastUrl = data.entities.urls[data.entities.urls.length - 1];\n        }\n\n        if ( ( data.media && data.media.length ) || data.extended_entities && data.extended_entities.media && data.extended_entities.media.length ){\n            lastUrl = '';\n        }\n\n        if ( lastUrl ){\n            renderedTweet.dataset.urlAttachment = lastUrl.expanded_url;\n            renderedTweet.dataset.urlAttachmentProcessed = 'false';\n        }\n\n        if ( container ){\n            const tweetContainer = container.querySelector( '.tweet-body a:last-of-type' );\n            console.log( tweetContainer );\n            tweetContainer.parentNode.replaceChild( renderedTweet, tweetContainer );\n\n\n        } else {\n            const tweet = document.querySelector( `[data-tweet-id=\"${ data.id }\"]` );\n            tweet.parentNode.replaceChild( renderedTweet, tweet );\n        }\n\n        // if ( data.id === '1214098949918875648' ){\n            // console.log( renderedTweet, data );\n        // }\n    }\n}\n\nftfHelpers.ready( function(){\n    ftfHelpers.processTweets();\n} );\n"]}