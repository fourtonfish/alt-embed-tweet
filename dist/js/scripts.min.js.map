{"version":3,"sources":["scripts.js"],"names":["ftfHelpers","ready","fn","document","readyState","addEventListener","dispatchEvent","eventName","event","Event","processTweets","tweets","querySelectorAll","tweetIds","_iterator","_createForOfIteratorHelper","s","_step","n","done","tweet","value","tweetId","anchors","length","href","match","replace","dataset","err","e","f","ftf_aet","config","use_api","fetch","method","credentials","headers","Content-Type","Cache-Control","body","URLSearchParams","action","tweet_ids","join","then","response","json","data","renderTweet","tweetsWithAttachment","tweetsWithAttachmentCount","_step2","_iterator2","urlAttachmentProcessed","concat","urlAttachment","urlAttachmentPreview","tmpAnchor","urlAttachmentPreviewHTML","image","createElement","className","title","description","hostname","innerHTML","querySelector","error","console","_loop","_iterator3","_step3","tweetAttribution","tweetDate","childNodes","textContent","i","currentNode","nodeName","nodeValue","tweetDateEl","usernames","name","username","names","split","created_at","text","id","tweetText","verifiedBadge","users","verified","renderedTweetHTML","profile_image_url","entities","urls","forEach","url","display_url","indexOf","RegExp","expanded_url","mentions","mention","hashtags","hashtag","tag","media","index","type","preview_image_url","tweetUrl","width","height","polls","poll","voteCounts","voteCountMax","votesTotal","options","map","option","votes","Math","max","apply","_toConsumableArray","reduce","total","num","votesPortion","label","toLocaleString","Date","toLocaleDateString","navigator","language","month","year","day","show_metrics","public_metrics","retweet_count","like_count","renderedTweet","lastUrl","extended_entities","parentNode","replaceChild"],"mappings":"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","file":"scripts.min.js","sourcesContent":["'use strict';\nconst ftfHelpers = {\n    ready: function( fn ) {\n        if ( document.readyState != 'loading' ){\n            fn();\n        } else {\n            document.addEventListener( 'DOMContentLoaded', fn );\n        }\n    },\n    dispatchEvent( eventName ){\n        const event = new Event( eventName );\n        document.dispatchEvent( event );\n    },\n    processTweets: function(){\n        const tweets = document.querySelectorAll( 'blockquote.twitter-tweet' );\n        let tweetIds = [];\n\n        for ( const tweet of tweets ) {\n            const anchors = tweet.querySelectorAll( 'a' );\n            const url = anchors[anchors.length - 1].href;\n            const tweetId = url.match(/status\\/(\\d+)/g)[0].replace( 'status/', '' );\n            tweetIds.push( tweetId );\n            tweet.dataset.tweetId = tweetId;\n        }\n\n        // console.log( 'tweet IDs', tweetIds );\n\n        if ( tweetIds.length ){\n            if ( ftf_aet.config.use_api ){\n                fetch( window.ftf_aet.ajax_url, {\n                    method: 'POST',\n                    credentials: 'same-origin',\n                    headers: {\n                        'Content-Type': 'application/x-www-form-urlencoded',\n                        'Cache-Control': 'no-cache',\n                    },\n                    body: new URLSearchParams( {\n                        action: 'ftf_embed_tweet',\n                        tweet_ids: tweetIds.join( ',' )\n                    } ) } )\n                    .then(function( response ){ return response.json() } )\n                    .then( function( response ){\n                        // console.log( 'response', response );\n                       if ( response && response.length ){\n                            response.forEach( function( data ){\n                                ftfHelpers.renderTweet( data );\n                            } );\n\n                            const tweetsWithAttachment = document.querySelectorAll( '[data-url-attachment-processed=\"false\"]' );\n                            let tweetsWithAttachmentCount = tweetsWithAttachment.length;\n\n                            if ( tweetsWithAttachmentCount === 0 ){\n                                ftfHelpers.dispatchEvent( 'tembeds_tweets_processed' );\n                            }\n\n                            // console.log( 'tweetsWithAttachment', tweetsWithAttachment );\n\n                            for ( const tweet of tweetsWithAttachment ) {\n                                tweet.dataset.urlAttachmentProcessed = 'true';\n\n                                fetch( `https://fourtonfish.com/sitesummary/?url=${ tweet.dataset.urlAttachment }` ).then( function( response ) { \n                                    return response.json();\n                                } ).then( function( data ) {\n                                    // console.log( 'sitesummary', data ); \n                                    if ( data && data.image ){\n                                        let urlAttachmentPreview = document.createElement( 'div' );\n                                        urlAttachmentPreview.className = `tweet-attachment-preview card mt-4`;\n\n                                        let tmpAnchor = document.createElement ( 'a' );\n                                        tmpAnchor.href = tweet.dataset.urlAttachment;\n\n                                        let urlAttachmentPreviewHTML = '';\n\n                                        if ( data.image ){\n                                            urlAttachmentPreviewHTML += `<img loading=\"lazy\" class=\"tweet-attachment-site-thumbnail card-img-top\" src=\"${ data.image }\" alt=\"\">`;\n                                        }\n\n                                        urlAttachmentPreviewHTML += `<div class=\"card-body\">`;\n\n                                        if ( data.title ){\n                                            urlAttachmentPreviewHTML += `<h5 class=\"card-title\">${ data.title }</h5>`;\n                                        }\n\n                                        if ( data.description ){\n                                            urlAttachmentPreviewHTML += `<h6 class=\"card-subtitle mb-2 text-muted\">${ data.description }</h6>`;\n                                        }\n\n                                        urlAttachmentPreviewHTML += `<p class=\"card-text\">🔗 <a class=\"stretched-link text-muted\" href=\"${ tweet.dataset.urlAttachment }\" target=\"_blank\">${ tmpAnchor.hostname }</a></p></div>`;\n\n                                        urlAttachmentPreview.innerHTML = urlAttachmentPreviewHTML;\n                                        tweet.querySelector( '.tweet-body-wrapper' ).appendChild( urlAttachmentPreview );\n                                    }\n                                } ).catch( function(error){\n                                    /* noop */\n                                })\n                                .then( function(){\n                                    tweetsWithAttachmentCount--;\n                                    console.log( 'tweetsWithAttachmentCount', tweetsWithAttachmentCount );\n                                    if ( tweetsWithAttachmentCount === 0 ){\n                                        ftfHelpers.dispatchEvent( 'tembeds_tweets_processed' );\n                                    }\n                                } );\n                            }\n                        }\n                    } )\n                    .catch( function( error ){\n                        // console.error( 'tembeds_error', error );\n                    } );\n            } else {\n\n                for ( const tweet of tweets ) {\n                    // console.log( 'debug:tweet', tweet );\n                    // console.log( 'debug:childNodes', tweet.childNodes );\n\n                    let tweetAttribution = '', tweetDate = '';\n\n                    if ( tweet.childNodes && tweet.childNodes.length ){\n                        if ( tweet.childNodes.length === 3 ){\n                            tweetDate = tweet.childNodes[2].textContent;\n                            for ( let i = 0; i < tweet.childNodes.length; i++ ){\n                                let currentNode = tweet.childNodes[i];\n                                if ( currentNode.nodeName === '#text' ) {\n                                    tweetAttribution = currentNode.nodeValue;\n                                    break;\n                                }\n                            }                        \n                        } else {\n                            tweetAttribution = tweet.childNodes[tweet.childNodes.length - 2].innerHTML;\n                            let tweetDateEl = document.createElement( 'div' );\n                            tweetDateEl.innerHTML = tweetAttribution;\n                            tweetDate = tweetDateEl.querySelector( 'a' ).textContent;\n                        }\n\n                        const usernames = tweetAttribution.match( /@\\w+/gi );\n                        let name = '', username = '';\n                        // console.log( 'debug:tweetDate', tweetDate );\n\n                        if ( usernames && usernames[0] ){\n                            username = usernames[0];\n                            const names = tweetAttribution.split( username );\n                            // console.log( 'debug:names', usernames );\n\n                            if ( names && names[0] ){\n                                name = names[0].replace( '— ', '' ).replace( ' (', '' );\n                            }\n                        }\n\n                        ftfHelpers.renderTweet( {\n                          'created_at': tweetDate,\n                          'text': tweet.querySelector( 'p' ).innerHTML,\n                          'id': tweet.dataset.tweetId,\n                          // 'author_id': '',\n                          'users': [\n                            {\n                              'name': name,\n                              'username': username.replace(/^@/, ''),\n                              // 'id': '',\n                              // 'profile_image_url': '',\n                              // 'verified': false\n                            }\n                          ]\n                        } );                    \n                    }\n                }\n            }\n        }\n    },\n    renderTweet: function( data ){\n        // console.log( 'debug:', data );\n        let tweetText = data.text,\n            tweetUrl = `https://twitter.com/${ data.users[0].username }/status/${ data.id }`,\n            entities = null,\n            verifiedBadge = data.users[0].verified ? '<svg class=\"tweet-verified-user-badge\" viewBox=\"0 0 24 24\" aria-label=\"Verified account\" class=\"r-13gxpu9 r-4qtqp9 r-yyyyoo r-1xvli5t r-9cviqr r-dnmrzs r-bnwqim r-1plcrui r-lrvibr\"><g><path d=\"M22.5 12.5c0-1.58-.875-2.95-2.148-3.6.154-.435.238-.905.238-1.4 0-2.21-1.71-3.998-3.818-3.998-.47 0-.92.084-1.336.25C14.818 2.415 13.51 1.5 12 1.5s-2.816.917-3.437 2.25c-.415-.165-.866-.25-1.336-.25-2.11 0-3.818 1.79-3.818 4 0 .494.083.964.237 1.4-1.272.65-2.147 2.018-2.147 3.6 0 1.495.782 2.798 1.942 3.486-.02.17-.032.34-.032.514 0 2.21 1.708 4 3.818 4 .47 0 .92-.086 1.335-.25.62 1.334 1.926 2.25 3.437 2.25 1.512 0 2.818-.916 3.437-2.25.415.163.865.248 1.336.248 2.11 0 3.818-1.79 3.818-4 0-.174-.012-.344-.033-.513 1.158-.687 1.943-1.99 1.943-3.484zm-6.616-3.334l-4.334 6.5c-.145.217-.382.334-.625.334-.143 0-.288-.04-.416-.126l-.115-.094-2.415-2.415c-.293-.293-.293-.768 0-1.06s.768-.294 1.06 0l1.77 1.767 3.825-5.74c.23-.345.696-.436 1.04-.207.346.23.44.696.21 1.04z\"></path></g></svg>' : '',\n            renderedTweetHTML = `<div class=\"card w-100\">\n                <div class=\"tweet-body-wrapper card-body pt-4\">\n                    <div class=\"card-text\">\n                        <div class=\"row no-gutters mb-1\">`;\n\n            if ( data.users[0].profile_image_url ){\n                renderedTweetHTML += `<div class=\"col-2 col-sm-1 col-md-1\">\n                    <a href=\"https://twitter.com/${ data.users[0].username }\" class=\"text-decoration-none\"><img loading=\"lazy\" class=\"rounded-circle border\" width=\"48\" height=\"48\" src=\"${ data.users[0].profile_image_url }\"></a>\n                </div>`;\n            }\n\n            renderedTweetHTML += `<div class=\"tweet-author ${ data.users[0].profile_image_url ? 'col-9 col-sm-10 col-md-10 pl-2' : 'col-11 col-sm-11 col-md-11' } pb-3\">\n                <p class=\"font-weight-bold mb-0 mt-0\"><a class=\"text-dark text-decoration-none\" href=\"https://twitter.com/${ data.users[0].username }\">${ data.users[0].name }${ verifiedBadge }</a></p>\n                <p class=\"mb-1 mb-md-2 mt-0\"><a class=\"text-muted text-decoration-none\" href=\"https://twitter.com/${ data.users[0].username }\">@${ data.users[0].username }</a></p>\n            </div>\n            <div class=\"col-1 text-right\">\n                <a href=\"${ tweetUrl }\" target=\"_blank\"><svg style=\"width: 24px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M512 97.248c-19.04 8.352-39.328 13.888-60.48 16.576 21.76-12.992 38.368-33.408 46.176-58.016-20.288 12.096-42.688 20.64-66.56 25.408C411.872 60.704 384.416 48 354.464 48c-58.112 0-104.896 47.168-104.896 104.992 0 8.32.704 16.32 2.432 23.936-87.264-4.256-164.48-46.08-216.352-109.792-9.056 15.712-14.368 33.696-14.368 53.056 0 36.352 18.72 68.576 46.624 87.232-16.864-.32-33.408-5.216-47.424-12.928v1.152c0 51.008 36.384 93.376 84.096 103.136-8.544 2.336-17.856 3.456-27.52 3.456-6.72 0-13.504-.384-19.872-1.792 13.6 41.568 52.192 72.128 98.08 73.12-35.712 27.936-81.056 44.768-130.144 44.768-8.608 0-16.864-.384-25.12-1.44C46.496 446.88 101.6 464 161.024 464c193.152 0 298.752-160 298.752-298.688 0-4.64-.16-9.12-.384-13.568 20.832-14.784 38.336-33.248 52.608-54.496z\" fill=\"#03a9f4\"/></svg></a>\n            </div>\n        </div>\n        <div class=\"tweet-body\">`;\n\n        if ( data.entities ){\n            if ( data.entities.urls ){\n                data.entities.urls.forEach( function( url ){\n                    if ( url.display_url.indexOf( 'pic.twitter.com' ) === -1 ){\n                        tweetText = tweetText.replace( RegExp( url.url, 'ig' ), `<a href=\"${ url.expanded_url }\" target=\"_blank\">${ url.display_url }</a>` )\n                    } else {\n                        tweetText = tweetText.replace( url.url, '' );\n                    }\n                } );\n            }\n\n            if ( data.entities.mentions ){\n                data.entities.mentions.forEach( function( mention ){\n                    tweetText = tweetText.replace( RegExp( `@${ mention.username }`, 'ig' ), `<a href=\"https://twitter.com/${ mention.username }\" target=\"_blank\">@${ mention.username }</a>` );\n                } );\n            }\n\n            if ( data.entities.hashtags ){\n                data.entities.hashtags.forEach( function( hashtag ){\n                    tweetText = tweetText.replace( RegExp( `#${ hashtag.tag }`, 'ig' ), `<a href=\"https://twitter.com/hashtag/${ hashtag.tag }\" target=\"_blank\">#${ hashtag.tag }</a>` );\n                } );\n            }\n        }\n\n        if ( data.media && data.media.length ){\n            tweetText += `<div data-media-length=\"${ data.media.length }\" class=\"tweet-media row mt-3 no-gutters\">`;\n\n            data.media.forEach( function( media, index ){\n                if ( data.media.length === 1 ){\n                    tweetText += `<div data-media-type=\"${ media.type }\" class=\"text-center col-sm-12 col-md-12 col-lg-12\">`;\n                } else if ( data.media.length === 3 ){\n                    if ( index === 2 ){\n                        tweetText += `<div data-media-type=\"${ media.type }\" class=\"text-center col-sm-12 col-md-12 col-lg-12\">`;\n                    } else {\n                        tweetText += `<div data-media-type=\"${ media.type }\" class=\"text-center col-sm-12 col-md-6 col-lg-6\">`;\n                    }\n                } else if ( data.media.length > 1 && data.media.length < 5 ){\n                    tweetText += `<div data-media-type=\"${ media.type }\" class=\"text-center col-sm-12 col-md-6 col-lg-6\">`;\n                } else {\n                    tweetText += `<div data-media-type=\"${ media.type }\" class=\"text-center col-sm-12 col-md-3 col-lg-3\">`;\n                }\n\n                if ( media.type === 'animated_gif' ){\n                    tweetText += `<video class=\"w-100 mt-0\" controls loop><source src=\"${ media.preview_image_url.replace( 'pbs.twimg.com/tweet_video_thumb', 'video.twimg.com/tweet_video' ).replace( '.jpg', '.mp4').replace( '.png', '.mp4') }\" type=\"video/mp4\"></video>`\n                } else if ( media.type === 'video' ){\n                    /* TODO: Video URLs not being passed in Twitter API v2.\n                       https://twittercommunity.com/t/how-do-i-get-the-video-url-in-recent-search/141896\n                    */\n                    tweetText += `<a class=\"tweet-video-placeholder\" href=\"${ tweetUrl }\" target=\"_blank\"><img loading=\"lazy\" width=\"${ media.width }\" height=\"${ media.height }\" class=\"w-100 rounded border\" src=\"${ media.preview_image_url }\"></a>`;\n\n                } else if ( media.type === 'photo' ){\n                    tweetText += `<a href=\"${ tweetUrl }\" target=\"_blank\"><img loading=\"lazy\" width=\"${ media.width }\" height=\"${ media.height }\" class=\"w-100 rounded border\" src=\"${ media.url }\"></a>`;\n                }\n\n                tweetText += '</div>';\n            } );\n\n            tweetText += '</div>';\n        }\n\n\n        if ( data.polls && data.polls.length ){\n            tweetText += '<div class=\"mt-0 row\">';\n\n            data.polls.forEach( function( poll ){\n                if ( poll.options && poll.options.length ){\n\n                    const voteCounts = poll.options.map( function( option ){\n                        return option.votes;\n                    } );\n\n                    const voteCountMax = Math.max( ...voteCounts );\n                    const votesTotal = voteCounts.reduce( function( total, num ){\n                        return total + num;\n                    } );\n\n                    poll.options.forEach( function( option ){\n                        const votesPortion = option.votes/votesTotal * 100;\n                        tweetText += `\n                        <div class=\"tweet-poll-results col-9\" style=\"height:60px;\">\n                            <div class=\"progress position-relative mt-n4 ${ option.votes === voteCountMax ? ' border border-primary ' : '' }\" style=\"height:30px;\">\n                                <div class=\"progress-bar\" \n                                     role=\"progressbar\" \n                                     style=\"width: ${ votesPortion }%\" \n                                     aria-valuenow=\"${ votesPortion }\" \n                                     aria-valuemin=\"0\" \n                                     aria-valuemax=\"100\"></div>\n                                <span class=\"pl-2 d-flex position-absolute w-100\" style=\"font-size: 1rem; line-height: 30px;\">${ option.label }</span>\n                            </div>\n                        </div>\n                        <div class=\"col-3 mt-n4 text-right\" style=\"height:60px;\">\n                            <span class=\"w-100\">${ Math.round( option.votes/votesTotal * 100 ) }%</span>\n                        </div>`;\n                    } );\n                    tweetText += `<div class=\"col-12 mt-3\"><p class=\"text-muted\">${ votesTotal.toLocaleString() } votes</p></div>`;\n                }\n            } );\n\n            tweetText += '</div>';\n        }                    \n\n        const tweetDate = new Date( data.created_at ).toLocaleDateString( navigator.language, { month: 'long', year: 'numeric', day: 'numeric' } );\n\n        renderedTweetHTML += tweetText + `</div>\n                </div>\n            </div>\n            <div class=\"card-footer\">`;\n\n        if ( ftf_aet.config.show_metrics && data.public_metrics ){\n            renderedTweetHTML += `\n                🔁 <a class=\"text-muted\" href=\"${ tweetUrl }\" target=\"_blank\">${ data.public_metrics.retweet_count.toLocaleString() }</a> |\n                ❤️ <a class=\"text-muted\" href=\"${ tweetUrl }\" target=\"_blank\">${ data.public_metrics.like_count.toLocaleString() }</a> | `;\n\n        }\n                    \n        renderedTweetHTML += `<a class=\"text-muted\" href=\"${ tweetUrl }\" target=\"_blank\">${ tweetDate }</a>\n            </div>\n        </div>`;\n        \n        let renderedTweet = document.createElement( 'div' );\n        renderedTweet.className = `twitter-tweet twitter-tweet-rendered w-100`;\n        renderedTweet.innerHTML = renderedTweetHTML;\n\n        let lastUrl = '';\n\n        if ( data.entities && data.entities.urls && data.entities.urls.length ){\n            lastUrl = data.entities.urls[data.entities.urls.length - 1];\n        }\n\n        if ( ( data.media && data.media.length ) || data.extended_entities && data.extended_entities.media && data.extended_entities.media.length ){\n            lastUrl = '';\n        }\n\n        if ( lastUrl ){\n            renderedTweet.dataset.urlAttachment = lastUrl.expanded_url;\n            renderedTweet.dataset.urlAttachmentProcessed = 'false';\n        }\n\n        const tweet = document.querySelector( `[data-tweet-id=\"${ data.id }\"]` );\n        tweet.parentNode.replaceChild( renderedTweet, tweet );\n\n        // if ( data.id === '1214098949918875648' ){\n            // console.log( renderedTweet, data );\n        // }\n    }\n}\n\nftfHelpers.ready( function(){\n    ftfHelpers.processTweets();\n} );\n"]}