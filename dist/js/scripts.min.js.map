{"version":3,"sources":["scripts.js"],"names":["ftfHelpers","ready","fn","document","readyState","addEventListener","renderTweet","data","tweetText","text","tweetUrl","concat","users","username","id","verifiedBadge","verified","renderedTweetHTML","profile_image_url","name","entities","urls","forEach","url","display_url","indexOf","RegExp","expanded_url","replace","mentions","mention","hashtags","hashtag","tag","media","length","index","type","preview_image_url","width","height","polls","poll","option","voteCounts","votesPortion","votesTotal","options","reduce","map","total","votes","_toConsumableArray","num","language","voteCountMax","label","Math","round","innerHTML","toLocaleString","lastUrl","created_at","extended_entities","ftf_aet","config","show_metrics","public_metrics","tweet","querySelector","retweet_count","like_count","tweetDate","renderedTweet","createElement","className","anchors","querySelectorAll","tweetId","tweetIds","dataset","urlAttachment","parentNode","replaceChild","tweets","body","URLSearchParams","_iterator","_createForOfIteratorHelper","tweet_ids","_step","value","response","href","match","push","err","e","f","tweetsWithAttachment","use_api","fetch","window","ajax_url","method","credentials","headers","Content-Type","then","join","urlAttachmentPreview","tmpAnchor","urlAttachmentPreviewHTML","json","image","appendChild","title","description","hostname","_loop","tweetAttribution","error","childNodes","_step3","currentNode","textContent","i","nodeValue","usernames","tweetDateEl","names","split"],"mappings":"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","file":"scripts.min.js","sourcesContent":["'use strict';\nconst ftfHelpers = {\n    ready: function( fn ) {\n        if ( document.readyState != 'loading' ){\n            fn();\n        } else {\n            document.addEventListener( 'DOMContentLoaded', fn );\n        }\n    },\n    renderTweet: function( data ){\n        // console.log( 'debug:', data );\n        let tweetText = data.text,\n            tweetUrl = `https://twitter.com/${ data.users[0].username }/status/${ data.id }`,\n            entities = null,\n            verifiedBadge = data.users[0].verified ? '<svg class=\"tweet-verified-user-badge\" viewBox=\"0 0 24 24\" aria-label=\"Verified account\" class=\"r-13gxpu9 r-4qtqp9 r-yyyyoo r-1xvli5t r-9cviqr r-dnmrzs r-bnwqim r-1plcrui r-lrvibr\"><g><path d=\"M22.5 12.5c0-1.58-.875-2.95-2.148-3.6.154-.435.238-.905.238-1.4 0-2.21-1.71-3.998-3.818-3.998-.47 0-.92.084-1.336.25C14.818 2.415 13.51 1.5 12 1.5s-2.816.917-3.437 2.25c-.415-.165-.866-.25-1.336-.25-2.11 0-3.818 1.79-3.818 4 0 .494.083.964.237 1.4-1.272.65-2.147 2.018-2.147 3.6 0 1.495.782 2.798 1.942 3.486-.02.17-.032.34-.032.514 0 2.21 1.708 4 3.818 4 .47 0 .92-.086 1.335-.25.62 1.334 1.926 2.25 3.437 2.25 1.512 0 2.818-.916 3.437-2.25.415.163.865.248 1.336.248 2.11 0 3.818-1.79 3.818-4 0-.174-.012-.344-.033-.513 1.158-.687 1.943-1.99 1.943-3.484zm-6.616-3.334l-4.334 6.5c-.145.217-.382.334-.625.334-.143 0-.288-.04-.416-.126l-.115-.094-2.415-2.415c-.293-.293-.293-.768 0-1.06s.768-.294 1.06 0l1.77 1.767 3.825-5.74c.23-.345.696-.436 1.04-.207.346.23.44.696.21 1.04z\"></path></g></svg>' : '',\n            renderedTweetHTML = `<div class=\"card w-100\">\n                <div class=\"tweet-body-wrapper card-body pt-4\">\n                    <div class=\"card-text\">\n                        <div class=\"row no-gutters mb-1\">`;\n\n            if ( data.users[0].profile_image_url ){\n                renderedTweetHTML += `<div class=\"col-2 col-sm-1 col-md-1\">\n                    <a href=\"https://twitter.com/${ data.users[0].username }\" class=\"text-decoration-none\"><img loading=\"lazy\" class=\"rounded-circle border\" width=\"48\" height=\"48\" src=\"${ data.users[0].profile_image_url }\"></a>\n                </div>`;\n            }\n\n            renderedTweetHTML += `<div class=\"tweet-author ${ data.users[0].profile_image_url ? 'col-9 col-sm-10 col-md-10 pl-2' : 'col-11 col-sm-11 col-md-11' } pb-3\">\n                <p class=\"font-weight-bold mb-0 mt-0\"><a class=\"text-dark text-decoration-none\" href=\"https://twitter.com/${ data.users[0].username }\">${ data.users[0].name }${ verifiedBadge }</a></p>\n                <p class=\"mb-1 mb-md-2 mt-0\"><a class=\"text-muted text-decoration-none\" href=\"https://twitter.com/${ data.users[0].username }\">@${ data.users[0].username }</a></p>\n            </div>\n            <div class=\"col-1 text-right\">\n                <a href=\"${ tweetUrl }\" target=\"_blank\"><svg style=\"width: 24px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M512 97.248c-19.04 8.352-39.328 13.888-60.48 16.576 21.76-12.992 38.368-33.408 46.176-58.016-20.288 12.096-42.688 20.64-66.56 25.408C411.872 60.704 384.416 48 354.464 48c-58.112 0-104.896 47.168-104.896 104.992 0 8.32.704 16.32 2.432 23.936-87.264-4.256-164.48-46.08-216.352-109.792-9.056 15.712-14.368 33.696-14.368 53.056 0 36.352 18.72 68.576 46.624 87.232-16.864-.32-33.408-5.216-47.424-12.928v1.152c0 51.008 36.384 93.376 84.096 103.136-8.544 2.336-17.856 3.456-27.52 3.456-6.72 0-13.504-.384-19.872-1.792 13.6 41.568 52.192 72.128 98.08 73.12-35.712 27.936-81.056 44.768-130.144 44.768-8.608 0-16.864-.384-25.12-1.44C46.496 446.88 101.6 464 161.024 464c193.152 0 298.752-160 298.752-298.688 0-4.64-.16-9.12-.384-13.568 20.832-14.784 38.336-33.248 52.608-54.496z\" fill=\"#03a9f4\"/></svg></a>\n            </div>\n        </div>\n        <div class=\"tweet-body\">`;\n\n        if ( data.entities ){\n            if ( data.entities.urls ){\n                data.entities.urls.forEach( function( url ){\n                    if ( url.display_url.indexOf( 'pic.twitter.com' ) === -1 ){\n                        tweetText = tweetText.replace( RegExp( url.url, 'ig' ), `<a href=\"${ url.expanded_url }\" target=\"_blank\">${ url.display_url }</a>` )\n                    } else {\n                        tweetText = tweetText.replace( url.url, '' );\n                    }\n                } );\n            }\n\n            if ( data.entities.mentions ){\n                data.entities.mentions.forEach( function( mention ){\n                    tweetText = tweetText.replace( RegExp( `@${ mention.username }`, 'ig' ), `<a href=\"https://twitter.com/${ mention.username }\" target=\"_blank\">@${ mention.username }</a>` );\n                } );\n            }\n\n            if ( data.entities.hashtags ){\n                data.entities.hashtags.forEach( function( hashtag ){\n                    tweetText = tweetText.replace( RegExp( `#${ hashtag.tag }`, 'ig' ), `<a href=\"https://twitter.com/hashtag/${ hashtag.tag }\" target=\"_blank\">#${ hashtag.tag }</a>` );\n                } );\n            }\n        }\n\n        if ( data.media && data.media.length ){\n            tweetText += `<div data-media-length=\"${ data.media.length }\" class=\"tweet-media row mt-3 no-gutters\">`;\n\n            data.media.forEach( function( media, index ){\n                if ( data.media.length === 1 ){\n                    tweetText += `<div data-media-type=\"${ media.type }\" class=\"text-center col-sm-12 col-md-12 col-lg-12\">`;\n                } else if ( data.media.length === 3 ){\n                    if ( index === 2 ){\n                        tweetText += `<div data-media-type=\"${ media.type }\" class=\"text-center col-sm-12 col-md-12 col-lg-12\">`;\n                    } else {\n                        tweetText += `<div data-media-type=\"${ media.type }\" class=\"text-center col-sm-12 col-md-6 col-lg-6\">`;\n                    }\n                } else if ( data.media.length > 1 && data.media.length < 5 ){\n                    tweetText += `<div data-media-type=\"${ media.type }\" class=\"text-center col-sm-12 col-md-6 col-lg-6\">`;\n                } else {\n                    tweetText += `<div data-media-type=\"${ media.type }\" class=\"text-center col-sm-12 col-md-3 col-lg-3\">`;\n                }\n\n                if ( media.type === 'animated_gif' ){\n                    tweetText += `<video class=\"w-100 mt-0\" controls><source src=\"${ media.preview_image_url.replace( 'pbs.twimg.com/tweet_video_thumb', 'video.twimg.com/tweet_video' ).replace( '.jpg', '.mp4').replace( '.png', '.mp4') }\" type=\"video/mp4\"></video>`\n                } else if ( media.type === 'video' ){\n                    /* TODO: Video URLs not being passed in Twitter API v2.\n                       https://twittercommunity.com/t/how-do-i-get-the-video-url-in-recent-search/141896\n                    */\n                    tweetText += `<a class=\"tweet-video-placeholder\" href=\"${ tweetUrl }\" target=\"_blank\"><img loading=\"lazy\" width=\"${ media.width }\" height=\"${ media.height }\" class=\"w-100 rounded border\" src=\"${ media.preview_image_url }\"></a>`;\n\n                } else if ( media.type === 'photo' ){\n                    tweetText += `<a href=\"${ tweetUrl }\" target=\"_blank\"><img loading=\"lazy\" width=\"${ media.width }\" height=\"${ media.height }\" class=\"w-100 rounded border\" src=\"${ media.url }\"></a>`;\n                }\n\n                tweetText += '</div>';\n            } );\n\n            tweetText += '</div>';\n        }\n\n\n        if ( data.polls && data.polls.length ){\n            tweetText += '<div class=\"mt-0 row\">';\n\n            data.polls.forEach( function( poll ){\n                if ( poll.options && poll.options.length ){\n\n                    const voteCounts = poll.options.map( function( option ){\n                        return option.votes;\n                    } );\n\n                    const voteCountMax = Math.max( ...voteCounts );\n                    const votesTotal = voteCounts.reduce( function( total, num ){\n                        return total + num;\n                    } );\n\n                    poll.options.forEach( function( option ){\n                        const votesPortion = option.votes/votesTotal * 100;\n                        tweetText += `\n                        <div class=\"tweet-poll-results col-9\" style=\"height:60px;\">\n                            <div class=\"progress position-relative mt-n4 ${ option.votes === voteCountMax ? ' border border-primary ' : '' }\" style=\"height:30px;\">\n                                <div class=\"progress-bar\" \n                                     role=\"progressbar\" \n                                     style=\"width: ${ votesPortion }%\" \n                                     aria-valuenow=\"${ votesPortion }\" \n                                     aria-valuemin=\"0\" \n                                     aria-valuemax=\"100\"></div>\n                                <span class=\"pl-2 d-flex position-absolute w-100\" style=\"font-size: 1rem; line-height: 30px;\">${ option.label }</span>\n                            </div>\n                        </div>\n                        <div class=\"col-3 mt-n4 text-right\" style=\"height:60px;\">\n                            <span class=\"w-100\">${ Math.round( option.votes/votesTotal * 100 ) }%</span>\n                        </div>`;\n                    } );\n                    tweetText += `<div class=\"col-12 mt-3\"><p class=\"text-muted\">${ votesTotal.toLocaleString() } votes</p></div>`;\n                }\n            } );\n\n            tweetText += '</div>';\n        }                    \n\n        const tweetDate = new Date( data.created_at ).toLocaleDateString( navigator.language, { month: 'long', year: 'numeric', day: 'numeric' } );\n\n        renderedTweetHTML += tweetText + `</div>\n                </div>\n            </div>\n            <div class=\"card-footer\">`;\n\n        if ( ftf_aet.config.show_metrics && data.public_metrics ){\n            renderedTweetHTML += `\n                🔁 <a class=\"text-muted\" href=\"${ tweetUrl }\" target=\"_blank\">${ data.public_metrics.retweet_count.toLocaleString() }</a> |\n                ❤️ <a class=\"text-muted\" href=\"${ tweetUrl }\" target=\"_blank\">${ data.public_metrics.like_count.toLocaleString() }</a> | `;\n\n        }\n                    \n        renderedTweetHTML += `<a class=\"text-muted\" href=\"${ tweetUrl }\" target=\"_blank\">${ tweetDate }</a>\n            </div>\n        </div>`;\n        \n        let renderedTweet = document.createElement( 'div' );\n        renderedTweet.className = `twitter-tweet twitter-tweet-rendered w-100`;\n        renderedTweet.innerHTML = renderedTweetHTML;\n\n        let lastUrl = '';\n\n        if ( data.entities && data.entities.urls && data.entities.urls.length ){\n            lastUrl = data.entities.urls[data.entities.urls.length - 1];\n        }\n\n        if ( ( data.media && data.media.length ) || data.extended_entities && data.extended_entities.media && data.extended_entities.media.length ){\n            lastUrl = '';\n        }\n\n        if ( lastUrl ){\n            renderedTweet.dataset.urlAttachment = lastUrl.expanded_url;\n\n        }\n\n        const tweet = document.querySelector( `[data-tweet-id=\"${ data.id }\"]` );\n        tweet.parentNode.replaceChild( renderedTweet, tweet );\n\n        // if ( data.id === '1214098949918875648' ){\n            // console.log( renderedTweet, data );\n        // }\n    }\n}\n\nftfHelpers.ready( function(){\n    const tweets = document.querySelectorAll( 'blockquote.twitter-tweet' );\n    let tweetIds = [];\n\n    for ( const tweet of tweets ) {\n        const anchors = tweet.querySelectorAll( 'a' );\n        const url = anchors[anchors.length - 1].href;\n        const tweetId = url.match(/status\\/(\\d+)/g)[0].replace( 'status/', '' );\n        tweetIds.push( tweetId );\n        tweet.dataset.tweetId = tweetId;\n    }\n\n    // console.log( 'tweet IDs', tweetIds );\n\n    if ( tweetIds.length ){\n        if ( ftf_aet.config.use_api ){\n            fetch( window.ftf_aet.ajax_url, {\n                method: 'POST',\n                credentials: 'same-origin',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                    'Cache-Control': 'no-cache',\n                },\n                body: new URLSearchParams( {\n                    action: 'ftf_embed_tweet',\n                    tweet_ids: tweetIds.join( ',' )\n                } ) } )\n                .then(function( response ){ return response.json() } )\n                .then( function( response ){\n                    // console.log( 'response', response );\n                   if ( response && response.length ){\n                        response.forEach( function( data ){\n                            ftfHelpers.renderTweet( data );\n                        } );\n\n                        const tweetsWithAttachment = document.querySelectorAll( '[data-url-attachment]' );\n\n                        for ( const tweet of tweetsWithAttachment ) {\n                            fetch( `https://fourtonfish.com/sitesummary/?url=${ tweet.dataset.urlAttachment }` ).then( function( response ) { \n                                return response.json();\n                            } ).then( function( data ) {\n                                // console.log( 'sitesummary', data ); \n                                if ( data && data.image ){\n                                    let urlAttachmentPreview = document.createElement( 'div' );\n                                    urlAttachmentPreview.className = `tweet-attachment-preview card mt-4`;\n\n                                    let tmpAnchor = document.createElement ( 'a' );\n                                    tmpAnchor.href = tweet.dataset.urlAttachment;\n\n                                    let urlAttachmentPreviewHTML = '';\n\n                                    if ( data.image ){\n                                        urlAttachmentPreviewHTML += `<img loading=\"lazy\" class=\"tweet-attachment-site-thumbnail card-img-top\" src=\"${ data.image }\" alt=\"\">`;\n                                    }\n\n                                    urlAttachmentPreviewHTML += `<div class=\"card-body\">`;\n\n                                    if ( data.title ){\n                                        urlAttachmentPreviewHTML += `<h5 class=\"card-title\">${ data.title }</h5>`;\n                                    }\n\n                                    if ( data.description ){\n                                        urlAttachmentPreviewHTML += `<h6 class=\"card-subtitle mb-2 text-muted\">${ data.description }</h6>`;\n                                    }\n\n                                    urlAttachmentPreviewHTML += `<p class=\"card-text\">🔗 <a class=\"stretched-link text-muted\" href=\"${ tweet.dataset.urlAttachment }\" target=\"_blank\">${ tmpAnchor.hostname }</a></p></div>`;\n\n                                    urlAttachmentPreview.innerHTML = urlAttachmentPreviewHTML;\n\n                                    tweet.querySelector( '.tweet-body-wrapper' ).appendChild( urlAttachmentPreview );\n                                }\n                            } );\n                        }\n                    }\n                } )\n                .catch( function( error ){\n                    console.error( 'ftf_aet_error', error );\n                } );\n        } else {\n\n            for ( const tweet of tweets ) {\n                // console.log( 'debug:tweet', tweet );\n                // console.log( 'debug:childNodes', tweet.childNodes );\n\n                let tweetAttribution = '', tweetDate = '';\n\n                if ( tweet.childNodes && tweet.childNodes.length ){\n                    if ( tweet.childNodes.length === 3 ){\n                        tweetDate = tweet.childNodes[2].textContent;\n                        for ( let i = 0; i < tweet.childNodes.length; i++ ){\n                            let currentNode = tweet.childNodes[i];\n                            if ( currentNode.nodeName === '#text' ) {\n                                tweetAttribution = currentNode.nodeValue;\n                                break;\n                            }\n                        }                        \n                    } else {\n                        tweetAttribution = tweet.childNodes[tweet.childNodes.length - 2].innerHTML;\n                        let tweetDateEl = document.createElement( 'div' );\n                        tweetDateEl.innerHTML = tweetAttribution;\n                        tweetDate = tweetDateEl.querySelector( 'a' ).textContent;\n                    }\n\n                    const usernames = tweetAttribution.match( /@\\w+/gi );\n                    let name = '', username = '';\n                    // console.log( 'debug:tweetDate', tweetDate );\n\n                    if ( usernames && usernames[0] ){\n                        username = usernames[0];\n                        const names = tweetAttribution.split( username );\n                        // console.log( 'debug:names', usernames );\n\n                        if ( names && names[0] ){\n                            name = names[0].replace( '— ', '' ).replace( ' (', '' );\n                        }\n                    }\n\n                    ftfHelpers.renderTweet( {\n                      'created_at': tweetDate,\n                      'text': tweet.querySelector( 'p' ).innerHTML,\n                      'id': tweet.dataset.tweetId,\n                      // 'author_id': '',\n                      'users': [\n                        {\n                          'name': name,\n                          'username': username.replace(/^@/, ''),\n                          // 'id': '',\n                          // 'profile_image_url': '',\n                          // 'verified': false\n                        }\n                      ]\n                    } );                    \n                }\n            }\n        }\n    }\n} );\n"]}